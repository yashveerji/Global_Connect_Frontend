{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yashv\\\\OneDrive\\\\Desktop\\\\Internshipmini2\\\\Global_Connect\\\\Global_Connect\\\\frontend\\\\src\\\\components\\\\JobBoard.js\",\n  _s = $RefreshSig$();\n// src/pages/JobBoard.js\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobBoard = ({\n  user\n}) => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  // Backend API ka base URL\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\n\n  // Jobs fetch karna\n  const fetchJobs = useCallback(async () => {\n    try {\n      const res = await axios.get(`${API_URL}/jobs`);\n      setJobs(res.data);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to fetch jobs\");\n      setLoading(false);\n    }\n  }, [API_URL]);\n  useEffect(() => {\n    fetchJobs();\n  }, [fetchJobs]);\n\n  // Apply job function\n  const handleApply = async jobId => {\n    if (!user) {\n      setMessage(\"Please login to apply for jobs.\");\n      return;\n    }\n    if (user.role === \"admin\") {\n      setMessage(\"Admins cannot apply for jobs.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(`${API_URL}/jobs/${jobId}/apply`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage(\"Application submitted successfully!\");\n    } catch (err) {\n      setMessage(\"Error applying for the job.\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center mt-5\",\n    children: \"Loading jobs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-red-500 mt-5\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-4 text-center text-green-600 font-semibold\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available right now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-md rounded-lg p-4 border hover:shadow-lg transition\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: job.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm\",\n          children: job.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 font-semibold text-green-600\",\n          children: [\"Salary: \", job.salary || \"Not specified\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mt-1 text-gray-500\",\n          children: [\"Posted on: \", new Date(job.createdAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleApply(job._id),\n          disabled: (user === null || user === void 0 ? void 0 : user.role) === \"admin\",\n          className: `mt-3 px-4 py-2 rounded text-white ${(user === null || user === void 0 ? void 0 : user.role) === \"admin\" ? \"bg-gray-400 cursor-not-allowed\" : \"bg-blue-600 hover:bg-blue-700\"}`,\n          children: \"Apply Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(JobBoard, \"CUeTDHvJku/Q398LmnbJSDACXv4=\");\n_c = JobBoard;\nexport default JobBoard;\nvar _c;\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","JobBoard","user","_s","jobs","setJobs","loading","setLoading","error","setError","message","setMessage","API_URL","process","env","REACT_APP_API_URL","fetchJobs","res","get","data","err","handleApply","jobId","role","token","localStorage","getItem","post","headers","Authorization","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","title","company","location","description","salary","Date","createdAt","toLocaleDateString","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["C:/Users/yashv/OneDrive/Desktop/Internshipmini2/Global_Connect/Global_Connect/frontend/src/components/JobBoard.js"],"sourcesContent":["// src/pages/JobBoard.js\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst JobBoard = ({ user }) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Backend API ka base URL\r\n  const API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000/api\";\r\n\r\n  // Jobs fetch karna\r\n  const fetchJobs = useCallback(async () => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/jobs`);\r\n      setJobs(res.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Failed to fetch jobs\");\r\n      setLoading(false);\r\n    }\r\n  }, [API_URL]);\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, [fetchJobs]);\r\n\r\n  // Apply job function\r\n  const handleApply = async (jobId) => {\r\n    if (!user) {\r\n      setMessage(\"Please login to apply for jobs.\");\r\n      return;\r\n    }\r\n\r\n    if (user.role === \"admin\") {\r\n      setMessage(\"Admins cannot apply for jobs.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.post(\r\n        `${API_URL}/jobs/${jobId}/apply`,\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n      setMessage(\"Application submitted successfully!\");\r\n    } catch (err) {\r\n      setMessage(\"Error applying for the job.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <p className=\"text-center mt-5\">Loading jobs...</p>;\r\n  if (error) return <p className=\"text-center text-red-500 mt-5\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Available Jobs</h1>\r\n\r\n      {message && (\r\n        <p className=\"mb-4 text-center text-green-600 font-semibold\">{message}</p>\r\n      )}\r\n\r\n      {jobs.length === 0 ? (\r\n        <p>No jobs available right now.</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {jobs.map((job) => (\r\n            <div\r\n              key={job._id}\r\n              className=\"bg-white shadow-md rounded-lg p-4 border hover:shadow-lg transition\"\r\n            >\r\n              <h2 className=\"text-xl font-semibold\">{job.title}</h2>\r\n              <p className=\"text-gray-600\">{job.company}</p>\r\n              <p className=\"text-gray-500 text-sm\">{job.location}</p>\r\n              <p className=\"mt-2\">{job.description}</p>\r\n              <p className=\"mt-2 font-semibold text-green-600\">\r\n                Salary: {job.salary || \"Not specified\"}\r\n              </p>\r\n              <p className=\"text-sm mt-1 text-gray-500\">\r\n                Posted on: {new Date(job.createdAt).toLocaleDateString()}\r\n              </p>\r\n\r\n              <button\r\n                onClick={() => handleApply(job._id)}\r\n                disabled={user?.role === \"admin\"}\r\n                className={`mt-3 px-4 py-2 rounded text-white ${\r\n                  user?.role === \"admin\"\r\n                    ? \"bg-gray-400 cursor-not-allowed\"\r\n                    : \"bg-blue-600 hover:bg-blue-700\"\r\n                }`}\r\n              >\r\n                Apply Now\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}